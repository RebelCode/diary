<?php

namespace Aventura\Diary\Bookable\Availability\Timetable\Rule;

use \Aventura\Diary\Testing\Bookable\Availability\Timetable\Rule\RangeRuleAbstractMock;
use \PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-25 at 11:11:50.
 */
class RangeRuleAbstractTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var RangeRuleAbstract
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RangeRuleAbstractMock(12, 20);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::getLower
     */
    public function testGetLower()
    {
        $this->assertEquals(12, $this->object->getLower());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::getUpper
     */
    public function testGetUpper()
    {
        $this->assertEquals(20, $this->object->getUpper());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::isLowerInclusive
     */
    public function testIsLowerInclusive()
    {
        $this->assertFalse($this->object->isLowerInclusive());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::isUpperInclusive
     */
    public function testIsUpperInclusive()
    {
        $this->assertFalse($this->object->isUpperInclusive());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::setLower
     */
    public function testSetLower()
    {
        $this->object->setLower(55);
        $this->assertEquals(55, $this->object->getLower());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::setUpper
     */
    public function testSetUpper()
    {
        $this->object->setUpper(102);
        $this->assertEquals(102, $this->object->getUpper());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::setLowerInclusive
     */
    public function testSetLowerInclusive()
    {
        $this->object->setLowerInclusive(true);
        $this->assertTrue($this->object->isLowerInclusive());
    }

    /**
     * @covers Aventura\Diary\Bookable\Availability\Timetable\Rule\TimeRangeRule::setUpperInclusive)
     */
    public function testSetUpperInclusive()
    {
        $this->object->setUpperInclusive(true);
        $this->assertTrue($this->object->isUpperInclusive());
    }

}
