<?php
namespace Aventura\Diary\DateTime;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-23 at 17:28:16.
 */
class DurationTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Duration
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Duration(0);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::getSeconds
     */
    public function testGetSeconds()
    {
        $this->object = new Duration(500);
        $this->assertEquals(500, $this->object->getSeconds());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::setSeconds
     */
    public function testSetSeconds()
    {
        $this->object->setSeconds(123456);
        $this->assertEquals(123456, $this->object->getSeconds());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::__toString
     */
    public function test__toString()
    {
        $seconds = 123123888;
        $this->object->setSeconds($seconds);
        $this->assertEquals(Duration::beautify($seconds), $this->object->__toString());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifySeconds()
    {
        $seconds = 59;
        $this->assertEquals('59 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyMinutes()
    {
        $seconds = 120;
        $this->assertEquals('2 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyMinutesSeconds()
    {
        $seconds = 156;
        $this->assertEquals('2 minutes, 36 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyHours()
    {
        $seconds = 3600;
        $this->assertEquals('1 hour', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyHoursMinutes()
    {
        $seconds = 3720;
        $this->assertEquals('1 hour, 2 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyHoursMinutesSeconds()
    {
        $seconds = 3735;
        $this->assertEquals('1 hour, 2 minutes, 15 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyHoursSeconds()
    {
        $seconds = 7240;
        $this->assertEquals('2 hours, 40 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDays()
    {
        $seconds = 345600;
        $this->assertEquals('4 days', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysHours()
    {
        $seconds = 378000;
        $this->assertEquals('4 days, 9 hours', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysHoursMinutes()
    {
        $seconds = 378300;
        $this->assertEquals('4 days, 9 hours, 5 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysHoursMinutesSeconds()
    {
        $seconds = 378313;
        $this->assertEquals('4 days, 9 hours, 5 minutes, 13 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysHoursSeconds()
    {
        $seconds = 378013;
        $this->assertEquals('4 days, 9 hours, 13 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysSeconds()
    {
        $seconds = 345613;
        $this->assertEquals('4 days, 13 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysMinutes()
    {
        $seconds = 345660;
        $this->assertEquals('4 days, 1 minute', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyDaysMinutesSeconds()
    {
        $seconds = 345660;
        $this->assertEquals('4 days, 1 minute', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeks()
    {
        $seconds = 1209600;
        $this->assertEquals('2 weeks', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDays()
    {
        $seconds = 2073600;
        $this->assertEquals('3 weeks, 3 days', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysHours()
    {
        $seconds = 2077200;
        $this->assertEquals('3 weeks, 3 days, 1 hour', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysHoursMinutes()
    {
        $seconds = 2077680;
        $this->assertEquals('3 weeks, 3 days, 1 hour, 8 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysHoursMinutesSeconds()
    {
        $seconds = 2077713;
        $this->assertEquals('3 weeks, 3 days, 1 hour, 8 minutes, 33 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksHours()
    {
        $seconds = 1263600;
        $this->assertEquals('2 weeks, 15 hours', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksMinutes()
    {
        $seconds = 1209720;
        $this->assertEquals('2 weeks, 2 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksSeconds()
    {
        $seconds = 1209620;
        $this->assertEquals('2 weeks, 20 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysMinutes()
    {
        $seconds = 1728120;
        $this->assertEquals('2 weeks, 6 days, 2 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysSeconds()
    {
        $seconds = 2073645;
        $this->assertEquals('3 weeks, 3 days, 45 seconds', Duration::beautify($seconds));
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksHoursMinutes()
    {
        $seconds = 1263900;
        $this->assertEquals('2 weeks, 15 hours, 5 minutes', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksHoursSeconds()
    {
        $seconds = 1263610;
        $this->assertEquals('2 weeks, 15 hours, 10 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksMinutesSeconds()
    {
        $seconds = 1209723;
        $this->assertEquals('2 weeks, 2 minutes, 3 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysHoursSeconds()
    {
        $seconds = 2077258;
        $this->assertEquals('3 weeks, 3 days, 1 hour, 58 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksDaysMinutesSeconds()
    {
        $seconds = 1728164;
        $this->assertEquals('2 weeks, 6 days, 2 minutes, 44 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::beautify
     */
    public function testBeautifyWeeksHoursMinutesSeconds()
    {
        $seconds = 1263911;
        $this->assertEquals('2 weeks, 15 hours, 5 minutes, 11 seconds', Duration::beautify($seconds));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::seconds
     */
    public function testSeconds()
    {
        $this->assertEquals(188, Duration::seconds(188, false));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::seconds
     */
    public function testSecondsObject()
    {
        $this->assertEquals(188, Duration::seconds(188)->getSeconds());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::minutes
     */
    public function testMinutes()
    {
        $this->assertEquals(60*1.5, Duration::minutes(1.5, false));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::minutes
     */
    public function testMinutesObject()
    {
        $this->assertEquals(3*60, Duration::minutes(3)->getSeconds());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::hours
     */
    public function testHours()
    {
        $this->assertEquals(5*60*60, Duration::hours(5, false));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::hours
     */
    public function testHoursObject()
    {
        $this->assertEquals(5*60*60, Duration::hours(5)->getSeconds());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::days
     */
    public function testDays()
    {
        $this->assertEquals(8*24*60*60, Duration::days(8, false));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::days
     */
    public function testDaysObject()
    {
        $this->assertEquals(2.5*24*60*60, Duration::days(2.5)->getSeconds());
    }

    /**
     * @covers Aventura\Diary\DateTime\Duration::weeks
     */
    public function testWeeks()
    {
        $this->assertEquals(6*7*24*60*60, Duration::weeks(6, false));
    }
    
    /**
     * @covers Aventura\Diary\DateTime\Duration::weeks
     */
    public function testWeeksObject()
    {
        $this->assertEquals(4*7*24*60*60, Duration::weeks(4)->getSeconds());
    }
    
}
